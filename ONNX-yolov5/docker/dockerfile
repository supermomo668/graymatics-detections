ARG OPENCV_VERSION=4.5.2
ARG ONNXRUNTIME_VERSION=1.12.0

FROM nvidia/cuda:11.5.0-cudnn8-runtime-ubuntu20.04
FROM ubuntu AS base

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y g++ git wget cmake

RUN apt-get install -y \
    build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev gnutls-bin\
    python3-dev python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev \
    # libdc1394-22-dev \
    libcanberra-gtk-module libcanberra-gtk3-module \ 
    python3-dev python3-pip

FROM base AS builder
RUN git clone https://github.com/opencv/opencv.git && \
    cd /opencv && mkdir build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local .. && \
    make -j"$(nproc)" && \
    make install  && ldconfig

# RUN g++ -o wav wav.cpp `pkg-config --cflags --libs opencv4`

FROM builder AS runner 
# System locale
# Important for UTF-8
ARG ONNXRUNTIME_VERSION
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

RUN pip install Pillow==9.4.0 onnx==${ONNXRUNTIME_VERSION} onnxruntime-gpu==${ONNXRUNTIME_VERSION}

WORKDIR /ONNX-yolov5
COPY / /ONNX-yolov5

RUN mkdir build && cd build && cmake .. && make -j4

# COPY ..yolov5/yolov5.onnx /

ENTRYPOINT ./build/main yolov5n.onnx 
